
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.CallableStatement;
import java.sql.Types;
import java.util.UUID;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author roscr
 */
public class ModificarInsectos extends javax.swing.JFrame {
    private InfoCurrentUser infoUsuarioActual;//usuario actual
    
    public ModificarInsectos(InfoCurrentUser infoUsuarioActual) {
        this.infoUsuarioActual = infoUsuarioActual; //usuario actual
        initComponents();
        this.setLocationRelativeTo(null);
        mostrarInsectos();
        metodosPreparacion();
        mostrarInfoEvento();
    }

    ModificarInsectos() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaEspecimenes = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        agregarButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnModificar = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        numeroCatalogoDelete = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        numCatalogoText = new javax.swing.JTextField();
        sexText = new javax.swing.JTextField();
        numIndividuosText = new javax.swing.JTextField();
        Eliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cancelDelete = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        nombreCientificoText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        idMetodoText = new javax.swing.JTextField();
        estadoText = new javax.swing.JTextField();
        idEventoText = new javax.swing.JTextField();
        etapaVidaText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMetodos = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaEvento = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MODIFICAR PRODUCTOS");
        setAlwaysOnTop(true);
        setLocationByPlatform(true);
        setName("frmModificarProducto"); // NOI18N
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        jPanel1.setBackground(new java.awt.Color(197, 217, 192));

        tablaEspecimenes.setBackground(new java.awt.Color(128, 167, 191));
        tablaEspecimenes.setForeground(new java.awt.Color(0, 0, 51));
        tablaEspecimenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Catalog Num", "ScientificName", "LifeStage", "Sex", "Count", "IdEventRecolecta", "NombreEvento", "IdMethod", "NameMethod", "Ubicacion"
            }
        ));
        tablaEspecimenes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        tablaEspecimenes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tablaEspecimenes.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        tablaEspecimenes.setFocusable(false);
        tablaEspecimenes.setOpaque(false);
        tablaEspecimenes = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablaEspecimenes.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tablaEspecimenes = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablaEspecimenes.getTableHeader().setResizingAllowed(false);
        tablaEspecimenes.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tablaEspecimenes);
        if (tablaEspecimenes.getColumnModel().getColumnCount() > 0) {
            tablaEspecimenes.getColumnModel().getColumn(0).setPreferredWidth(400);
            tablaEspecimenes.getColumnModel().getColumn(2).setPreferredWidth(2);
        }

        jButton1.setBackground(new java.awt.Color(0, 0, 204));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        agregarButton.setBackground(new java.awt.Color(0, 204, 51));
        agregarButton.setForeground(new java.awt.Color(0, 0, 0));
        agregarButton.setText("Agregar Especimen");
        agregarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarButtonActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(242, 242, 242));

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Número Individuos");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Etapa Vida");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Sexo");

        btnModificar.setBackground(new java.awt.Color(0, 0, 204));
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Actualizar");
        btnModificar.setName("btnModificar"); // NOI18N
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(255, 0, 51));
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Eliminar Espécimen");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Número Catálogo");

        numeroCatalogoDelete.setBackground(new java.awt.Color(179, 185, 192));

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Editar Espécimen");

        numCatalogoText.setBackground(new java.awt.Color(179, 185, 192));
        numCatalogoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numCatalogoTextActionPerformed(evt);
            }
        });

        sexText.setBackground(new java.awt.Color(179, 185, 192));

        numIndividuosText.setBackground(new java.awt.Color(179, 185, 192));

        Eliminar.setBackground(new java.awt.Color(255, 0, 51));
        Eliminar.setForeground(new java.awt.Color(255, 255, 255));
        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Nombre Científico");

        cancelDelete.setBackground(new java.awt.Color(255, 153, 0));
        cancelDelete.setForeground(new java.awt.Color(255, 255, 255));
        cancelDelete.setText("Cancelar");
        cancelDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelDeleteActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(255, 0, 51));
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Atras");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Número Catálogo");

        nombreCientificoText.setBackground(new java.awt.Color(179, 185, 192));
        nombreCientificoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreCientificoTextActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Estado");

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("ID Metodo");

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("ID Evento");

        idMetodoText.setBackground(new java.awt.Color(179, 185, 192));

        estadoText.setBackground(new java.awt.Color(179, 185, 192));

        idEventoText.setBackground(new java.awt.Color(179, 185, 192));

        etapaVidaText.setBackground(new java.awt.Color(179, 185, 192));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cancelDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(numeroCatalogoDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(idMetodoText, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etapaVidaText, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sexText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnModificar)
                                .addComponent(numIndividuosText, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(estadoText, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idEventoText, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numCatalogoText, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombreCientificoText, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(numCatalogoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nombreCientificoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(etapaVidaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(sexText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numIndividuosText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(estadoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idEventoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idMetodoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numeroCatalogoDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelDelete)
                    .addComponent(Eliminar))
                .addGap(26, 26, 26))
        );

        tablaMetodos.setBackground(new java.awt.Color(128, 167, 191));
        tablaMetodos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID Metodo", "Metodo Preparacion"
            }
        ));
        tablaMetodos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablaMetodos.getTableHeader().setResizingAllowed(false);
        tablaMetodos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaMetodos);

        jLabel18.setBackground(new java.awt.Color(0, 0, 0));
        jLabel18.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Estados aceptados para especimen: 'recolectado', 'pendiente_identificacion', 'identificado', 'validado', 'necesita_revision'");

        tablaEvento.setBackground(new java.awt.Color(128, 167, 191));
        tablaEvento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID Evento", "Estado Evento", "Localidad"
            }
        ));
        tablaEvento
        = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablaEvento.getTableHeader().setResizingAllowed(false);
        tablaEvento.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tablaEvento);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(187, 187, 187)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(agregarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1047, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 59, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(agregarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 98, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numCatalogoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numCatalogoTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numCatalogoTextActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        modificarEspecimen();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
        eliminarEspecimen();
    }//GEN-LAST:event_EliminarActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        Menu newframe = new Menu(infoUsuarioActual);
        newframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        numCatalogoText.setText("");
        etapaVidaText.setText("");
        sexText.setText("");
        numIndividuosText.setText("");
        numeroCatalogoDelete.setText("");
        nombreCientificoText.setText("");
        estadoText.setText("");
        idEventoText.setText("");
        idMetodoText.setText("");
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void cancelDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelDeleteActionPerformed
        // TODO add your handling code here:
        numCatalogoText.setText("");
        etapaVidaText.setText("");
        sexText.setText("");
        numIndividuosText.setText("");
        numeroCatalogoDelete.setText("");
        nombreCientificoText.setText("");
        estadoText.setText("");
        idEventoText.setText("");
        idMetodoText.setText("");
    }//GEN-LAST:event_cancelDeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        mostrarInsectos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void agregarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        AgregarEspecimen frameActual = new AgregarEspecimen(infoUsuarioActual);
        frameActual.setVisible(true);
    }//GEN-LAST:event_agregarButtonActionPerformed

    private void nombreCientificoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreCientificoTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreCientificoTextActionPerformed
    
    private void eliminarEspecimen() {
        //numero para identificar el especimen a eliminar 
        String catalogo = numeroCatalogoDelete.getText(); 

        if (catalogo.equals("")) {
            JOptionPane.showMessageDialog(this, "Numero de catalogo incorrecto", "Error", JOptionPane.ERROR_MESSAGE);
            return; 
        }

        int intCatalogo = 0;
        try {
            intCatalogo = Integer.parseInt(catalogo);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error en el formato", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Mostrar mensaje para confirmar eliminacion
        int confirm = JOptionPane.showConfirmDialog(this, "¿Eliminar este especimen?", "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (confirm == JOptionPane.YES_OPTION) {
            //para checar si existe el especimen
            String checkSql = "SELECT COUNT(*) FROM Especimen WHERE catalogNumber = ?";
            
            //conexion
            try (Connection conexion = new ConexionBD().getConnection(); 
                
                //prepared statement para la consulta
                PreparedStatement checkStatement = conexion.prepareStatement(checkSql)) {

                //Guardar resultados de la consulta
                checkStatement.setInt(1, intCatalogo);
                ResultSet rs = checkStatement.executeQuery();

                // si hay coincidencias, si la consulta conto mas de cero
                if (rs.next() && rs.getInt(1) > 0) {
                    //si existe llamar a eliminar especimen
                    String sql = "CALL eliminar_especimen(?)"; 

                    try (CallableStatement callableStatement = conexion.prepareCall(sql)) {
                        callableStatement.setInt(1, intCatalogo);
                        callableStatement.execute();
                        JOptionPane.showMessageDialog(this, "Especimen eliminado", "Exito", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    //no se conto el numero de catalogo
                    JOptionPane.showMessageDialog(this, "El numero de catalogo no existe en la base de datos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al eliminar: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        numCatalogoText.setText("");
        etapaVidaText.setText("");
        sexText.setText("");
        numIndividuosText.setText("");
        numeroCatalogoDelete.setText("");
        nombreCientificoText.setText("");
        estadoText.setText("");
        idEventoText.setText("");
        idMetodoText.setText("");
    }
    
    public void metodosPreparacion(){
        //obtener metodos de preparacion
        String sql = "SELECT * FROM metodoDePrepacion";
        
        //conexion
        ConexionBD conectar = new ConexionBD();
        Connection conexion = conectar.getConnection();
        
        //modelo para la tabla
        DefaultTableModel modelMetodos = new DefaultTableModel();

        modelMetodos.addColumn("ID Método");
        modelMetodos.addColumn("Descripción Método");

        // Asignar el modelo a la tabla
        tablaMetodos.setModel(modelMetodos);

        try {
            //obtener y guardar resultados consulta
            PreparedStatement preparedStatement = conexion.prepareStatement(sql);
            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                String[] infoMetodo = new String[2]; 
                infoMetodo[0] = resultSet.getString("ID_preparacion"); 
                infoMetodo[1] = resultSet.getString("descripcion_metodo"); 
                
                modelMetodos.addRow(infoMetodo);
            }

            resultSet.close();
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        } finally {
            try {
                if (conexion != null) {
                    conexion.close(); 
                }
            } catch (SQLException ex) {
                System.out.println("Errorconexión: " + ex.getMessage());
            }
        }
    }
    
    public void mostrarInfoEvento(){
        String sql = "SELECT * FROM consultar_info_especimen()"; // Consulta

        // Conexión
        ConexionBD conectar = new ConexionBD();
        Connection conexion = conectar.getConnection();

        DefaultTableModel modelEspecimenes = new DefaultTableModel();
        modelEspecimenes.addColumn("ID Evento");
        modelEspecimenes.addColumn("Estado Evento");
        modelEspecimenes.addColumn("Localidad");

        tablaEvento.setModel(modelEspecimenes); //asignar modelo

        try {
            CallableStatement callableStatement = conexion.prepareCall(sql);

            // Ejecutar la consulta y obtener el resultado
            ResultSet resultSet = callableStatement.executeQuery();

            while (resultSet.next()) {
                String[] infoEspecimen = new String[3];
                infoEspecimen[0] = resultSet.getString("id_evento");
                infoEspecimen[1] = resultSet.getString("estado_evento");
                infoEspecimen[2] = resultSet.getString("localidad");

                modelEspecimenes.addRow(infoEspecimen); 
            }

            resultSet.close();
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage()); 
        } finally {
            try {
                if (conexion != null) {
                    conexion.close();
                }
            } catch (SQLException ex) {
                System.out.println("Error cerrando la conexión: " + ex.getMessage());
            }
        }
    }


    private void modificarEspecimen() {
        //obtener campos de entrada
        if(numCatalogoText.getText().equals("") || nombreCientificoText.getText().equals("") || etapaVidaText.getText().equals("") || sexText.getText().equals("") || numIndividuosText.getText().equals("") || estadoText.getText().equals("") || idEventoText.getText().equals("") || idMetodoText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campos vacios", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Salir del método si hay un campo vacío
        }
        
        
        String catalogo = numCatalogoText.getText();
        String nombreCientifico = nombreCientificoText.getText();
        String lifeStage = etapaVidaText.getText();
        String sexo = sexText.getText();
        int individualCount = Integer.parseInt(numIndividuosText.getText());
        String estado = estadoText.getText();
        int idEvento = Integer.parseInt(idEventoText.getText());
        int idMetodo = Integer.parseInt(idMetodoText.getText());

        if (catalogo.isEmpty() || nombreCientifico.isEmpty() || lifeStage.isEmpty() || sexo.isEmpty() ||
            numIndividuosText.getText().isEmpty() || estado.isEmpty() || idEvento <= 0 || idMetodo <= 0) {
            JOptionPane.showMessageDialog(this, "Campos vacios", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //consulta para actualizar
        String sql = "CALL actualizar_especimen(?, ?, ?, ?, ?, ?, ?, ?)"; 

        try (Connection conexion = new ConexionBD().getConnection(); 
            //asignar consulta
             CallableStatement callableStatement = conexion.prepareCall(sql)) {

            callableStatement.setInt(1, Integer.parseInt(catalogo)); 
            callableStatement.setString(2, nombreCientifico);       
            callableStatement.setString(3, lifeStage);               
            callableStatement.setString(4, sexo);                    
            callableStatement.setInt(5, individualCount);            
            callableStatement.setString(6, estado);                  
            callableStatement.setInt(7, idEvento);                   
            callableStatement.setInt(8, idMetodo);                  

            callableStatement.execute();

            JOptionPane.showMessageDialog(this, "Especimen actualizado", "Exito", JOptionPane.INFORMATION_MESSAGE);

            numCatalogoText.setText("");
            nombreCientificoText.setText("");
            etapaVidaText.setText("");
            sexText.setText("");
            numIndividuosText.setText("");
            estadoText.setText("");
            idEventoText.setText("");
            idMetodoText.setText("");

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al modificar", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, "Error en el formato ", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarInsectos().setVisible(true);
            }
        });
    }
    
    public void mostrarInsectos(){
        //System.out.println("Entrando mostrarProductos");
        
        //consulta
        String sql = "SELECT * FROM obtenerInfoEspecimen()";
        
        //conexion
        ConexionBD conectar = new ConexionBD();
        Connection conexion = conectar.getConnection();
        
        //modelo para tabla
        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("catalogNumber");
        model.addColumn("scientificName");
        model.addColumn("lifeStage");
        model.addColumn("sex");
        model.addColumn("individualCount");
        model.addColumn("idEventRecolection");
        model.addColumn("eventState");
        model.addColumn("idMethod");
        model.addColumn("descriptionMethod");
        model.addColumn("locality"); 

        tablaEspecimenes.setModel(model);
        
        //ajustar tamaño collumna
        tablaEspecimenes.getColumnModel().getColumn(8).setPreferredWidth(220);
        tablaEspecimenes.getColumnModel().getColumn(8).setResizable(false);

        try {
            //para guardar y ejecutar resultado consulta
            PreparedStatement preparedStatement = conexion.prepareStatement(sql);
            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                String[] infoTablas = new String[10]; // Cambiar a 10 para incluir 'localidad'
                infoTablas[0] = resultSet.getString("catalogNumber");
                infoTablas[1] = resultSet.getString("scientificName");
                infoTablas[2] = resultSet.getString("lifeStage");
                infoTablas[3] = resultSet.getString("sex");
                infoTablas[4] = resultSet.getString("individualCount");
                infoTablas[5] = resultSet.getString("ID_Evento_Recoleccion");
                infoTablas[6] = resultSet.getString("estado_evento");  // Estado del evento
                infoTablas[7] = resultSet.getString("ID_metodo");
                infoTablas[8] = resultSet.getString("descripcion_metodo");   // Descripción del método
                infoTablas[9] = resultSet.getString("localidad"); // Obtener localidad

                model.addRow(infoTablas);
            }

            resultSet.close();
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        } finally {
            try {
                if (conexion != null) {
                    conexion.close();
                }
            } catch (SQLException ex) {
                System.out.println("Error" + ex.getMessage());
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton agregarButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton cancelDelete;
    private javax.swing.JTextField estadoText;
    private javax.swing.JTextField etapaVidaText;
    private javax.swing.JTextField idEventoText;
    private javax.swing.JTextField idMetodoText;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField nombreCientificoText;
    private javax.swing.JTextField numCatalogoText;
    private javax.swing.JTextField numIndividuosText;
    private javax.swing.JTextField numeroCatalogoDelete;
    private javax.swing.JTextField sexText;
    public javax.swing.JTable tablaEspecimenes;
    private javax.swing.JTable tablaEvento;
    private javax.swing.JTable tablaMetodos;
    // End of variables declaration//GEN-END:variables
}
